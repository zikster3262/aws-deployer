ar params = {
  LaunchTemplateData: { /* required */
    BlockDeviceMappings: [
      {
        DeviceName: 'STRING_VALUE',
        Ebs: {
          DeleteOnTermination: true || false,
          Encrypted: true || false,
          Iops: 'NUMBER_VALUE',
          KmsKeyId: 'STRING_VALUE',
          SnapshotId: 'STRING_VALUE',
          Throughput: 'NUMBER_VALUE',
          VolumeSize: 'NUMBER_VALUE',
          VolumeType: standard | io1 | io2 | gp2 | sc1 | st1 | gp3
        },
        NoDevice: 'STRING_VALUE',
        VirtualName: 'STRING_VALUE'
      },
      /* more items */
    ],
    CapacityReservationSpecification: {
      CapacityReservationPreference: open | none,
      CapacityReservationTarget: {
        CapacityReservationId: 'STRING_VALUE',
        CapacityReservationResourceGroupArn: 'STRING_VALUE'
      }
    },
    CpuOptions: {
      CoreCount: 'NUMBER_VALUE',
      ThreadsPerCore: 'NUMBER_VALUE'
    },
    CreditSpecification: {
      CpuCredits: 'STRING_VALUE' /* required */
    },
    DisableApiTermination: true || false,
    EbsOptimized: true || false,
    ElasticGpuSpecifications: [
      {
        Type: 'STRING_VALUE' /* required */
      },
      /* more items */
    ],
    ElasticInferenceAccelerators: [
      {
        Type: 'STRING_VALUE', /* required */
        Count: 'NUMBER_VALUE'
      },
      /* more items */
    ],
    EnclaveOptions: {
      Enabled: true || false
    },
    HibernationOptions: {
      Configured: true || false
    },
    IamInstanceProfile: {
      Arn: 'STRING_VALUE',
      Name: 'STRING_VALUE'
    },
    ImageId: 'STRING_VALUE',
    InstanceInitiatedShutdownBehavior: stop | terminate,
    InstanceMarketOptions: {
      MarketType: spot,
      SpotOptions: {
        BlockDurationMinutes: 'NUMBER_VALUE',
        InstanceInterruptionBehavior: hibernate | stop | terminate,
        MaxPrice: 'STRING_VALUE',
        SpotInstanceType: one-time | persistent,
        ValidUntil: new Date || 'Wed Dec 31 1969 16:00:00 GMT-0800 (PST)' || 123456789
      }
    },
    InstanceRequirements: {
      MemoryMiB: { /* required */
        Min: 'NUMBER_VALUE', /* required */
        Max: 'NUMBER_VALUE'
      },
      VCpuCount: { /* required */
        Min: 'NUMBER_VALUE', /* required */
        Max: 'NUMBER_VALUE'
      },
      AcceleratorCount: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      },
      AcceleratorManufacturers: [
        nvidia | amd | amazon-web-services | xilinx,
        /* more items */
      ],
      AcceleratorNames: [
        a100 | v100 | k80 | t4 | m60 | radeon-pro-v520 | vu9p,
        /* more items */
      ],
      AcceleratorTotalMemoryMiB: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      },
      AcceleratorTypes: [
        gpu | fpga | inference,
        /* more items */
      ],
      BareMetal: included | required | excluded,
      BaselineEbsBandwidthMbps: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      },
      BurstablePerformance: included | required | excluded,
      CpuManufacturers: [
        intel | amd | amazon-web-services,
        /* more items */
      ],
      ExcludedInstanceTypes: [
        'STRING_VALUE',
        /* more items */
      ],
      InstanceGenerations: [
        current | previous,
        /* more items */
      ],
      LocalStorage: included | required | excluded,
      LocalStorageTypes: [
        hdd | ssd,
        /* more items */
      ],
      MemoryGiBPerVCpu: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      },
      NetworkInterfaceCount: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      },
      OnDemandMaxPricePercentageOverLowestPrice: 'NUMBER_VALUE',
      RequireHibernateSupport: true || false,
      SpotMaxPricePercentageOverLowestPrice: 'NUMBER_VALUE',
      TotalLocalStorageGB: {
        Max: 'NUMBER_VALUE',
        Min: 'NUMBER_VALUE'
      }
    },
    InstanceType: a1.medium | a1.large | a1.xlarge | a1.2xlarge | a1.4xlarge | a1.metal | c1.medium | c1.xlarge | c3.large | c3.xlarge | c3.2xlarge | c3.4xlarge | c3.8xlarge | c4.large | c4.xlarge | c4.2xlarge | c4.4xlarge | c4.8xlarge | c5.large | c5.xlarge | c5.2xlarge | c5.4xlarge | c5.9xlarge | c5.12xlarge | c5.18xlarge | c5.24xlarge | c5.metal | c5a.large | c5a.xlarge | c5a.2xlarge | c5a.4xlarge | c5a.8xlarge | c5a.12xlarge | c5a.16xlarge | c5a.24xlarge | c5ad.large | c5ad.xlarge | c5ad.2xlarge | c5ad.4xlarge | c5ad.8xlarge | c5ad.12xlarge | c5ad.16xlarge | c5ad.24xlarge | c5d.large | c5d.xlarge | c5d.2xlarge | c5d.4xlarge | c5d.9xlarge | c5d.12xlarge | c5d.18xlarge | c5d.24xlarge | c5d.metal | c5n.large | c5n.xlarge | c5n.2xlarge | c5n.4xlarge | c5n.9xlarge | c5n.18xlarge | c5n.metal | c6g.medium | c6g.large | c6g.xlarge | c6g.2xlarge | c6g.4xlarge | c6g.8xlarge | c6g.12xlarge | c6g.16xlarge | c6g.metal | c6gd.medium | c6gd.large | c6gd.xlarge | c6gd.2xlarge | c6gd.4xlarge | c6gd.8xlarge | c6gd.12xlarge | c6gd.16xlarge | c6gd.metal | c6gn.medium | c6gn.large | c6gn.xlarge | c6gn.2xlarge | c6gn.4xlarge | c6gn.8xlarge | c6gn.12xlarge | c6gn.16xlarge | c6i.large | c6i.xlarge | c6i.2xlarge | c6i.4xlarge | c6i.8xlarge | c6i.12xlarge | c6i.16xlarge | c6i.24xlarge | c6i.32xlarge | cc1.4xlarge | cc2.8xlarge | cg1.4xlarge | cr1.8xlarge | d2.xlarge | d2.2xlarge | d2.4xlarge | d2.8xlarge | d3.xlarge | d3.2xlarge | d3.4xlarge | d3.8xlarge | d3en.xlarge | d3en.2xlarge | d3en.4xlarge | d3en.6xlarge | d3en.8xlarge | d3en.12xlarge | dl1.24xlarge | f1.2xlarge | f1.4xlarge | f1.16xlarge | g2.2xlarge | g2.8xlarge | g3.4xlarge | g3.8xlarge | g3.16xlarge | g3s.xlarge | g4ad.xlarge | g4ad.2xlarge | g4ad.4xlarge | g4ad.8xlarge | g4ad.16xlarge | g4dn.xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.12xlarge | g4dn.16xlarge | g4dn.metal | g5.xlarge | g5.2xlarge | g5.4xlarge | g5.8xlarge | g5.12xlarge | g5.16xlarge | g5.24xlarge | g5.48xlarge | g5g.xlarge | g5g.2xlarge | g5g.4xlarge | g5g.8xlarge | g5g.16xlarge | g5g.metal | hi1.4xlarge | hs1.8xlarge | h1.2xlarge | h1.4xlarge | h1.8xlarge | h1.16xlarge | i2.xlarge | i2.2xlarge | i2.4xlarge | i2.8xlarge | i3.large | i3.xlarge | i3.2xlarge | i3.4xlarge | i3.8xlarge | i3.16xlarge | i3.metal | i3en.large | i3en.xlarge | i3en.2xlarge | i3en.3xlarge | i3en.6xlarge | i3en.12xlarge | i3en.24xlarge | i3en.metal | im4gn.large | im4gn.xlarge | im4gn.2xlarge | im4gn.4xlarge | im4gn.8xlarge | im4gn.16xlarge | inf1.xlarge | inf1.2xlarge | inf1.6xlarge | inf1.24xlarge | is4gen.medium | is4gen.large | is4gen.xlarge | is4gen.2xlarge | is4gen.4xlarge | is4gen.8xlarge | m1.small | m1.medium | m1.large | m1.xlarge | m2.xlarge | m2.2xlarge | m2.4xlarge | m3.medium | m3.large | m3.xlarge | m3.2xlarge | m4.large | m4.xlarge | m4.2xlarge | m4.4xlarge | m4.10xlarge | m4.16xlarge | m5.large | m5.xlarge | m5.2xlarge | m5.4xlarge | m5.8xlarge | m5.12xlarge | m5.16xlarge | m5.24xlarge | m5.metal | m5a.large | m5a.xlarge | m5a.2xlarge | m5a.4xlarge | m5a.8xlarge | m5a.12xlarge | m5a.16xlarge | m5a.24xlarge | m5ad.large | m5ad.xlarge | m5ad.2xlarge | m5ad.4xlarge | m5ad.8xlarge | m5ad.12xlarge | m5ad.16xlarge | m5ad.24xlarge | m5d.large | m5d.xlarge | m5d.2xlarge | m5d.4xlarge | m5d.8xlarge | m5d.12xlarge | m5d.16xlarge | m5d.24xlarge | m5d.metal | m5dn.large | m5dn.xlarge | m5dn.2xlarge | m5dn.4xlarge | m5dn.8xlarge | m5dn.12xlarge | m5dn.16xlarge | m5dn.24xlarge | m5dn.metal | m5n.large | m5n.xlarge | m5n.2xlarge | m5n.4xlarge | m5n.8xlarge | m5n.12xlarge | m5n.16xlarge | m5n.24xlarge | m5n.metal | m5zn.large | m5zn.xlarge | m5zn.2xlarge | m5zn.3xlarge | m5zn.6xlarge | m5zn.12xlarge | m5zn.metal | m6a.large | m6a.xlarge | m6a.2xlarge | m6a.4xlarge | m6a.8xlarge | m6a.12xlarge | m6a.16xlarge | m6a.24xlarge | m6a.32xlarge | m6a.48xlarge | m6g.metal | m6g.medium | m6g.large | m6g.xlarge | m6g.2xlarge | m6g.4xlarge | m6g.8xlarge | m6g.12xlarge | m6g.16xlarge | m6gd.metal | m6gd.medium | m6gd.large | m6gd.xlarge | m6gd.2xlarge | m6gd.4xlarge | m6gd.8xlarge | m6gd.12xlarge | m6gd.16xlarge | m6i.large | m6i.xlarge | m6i.2xlarge | m6i.4xlarge | m6i.8xlarge | m6i.12xlarge | m6i.16xlarge | m6i.24xlarge | m6i.32xlarge | mac1.metal | p2.xlarge | p2.8xlarge | p2.16xlarge | p3.2xlarge | p3.8xlarge | p3.16xlarge | p3dn.24xlarge | p4d.24xlarge | r3.large | r3.xlarge | r3.2xlarge | r3.4xlarge | r3.8xlarge | r4.large | r4.xlarge | r4.2xlarge | r4.4xlarge | r4.8xlarge | r4.16xlarge | r5.large | r5.xlarge | r5.2xlarge | r5.4xlarge | r5.8xlarge | r5.12xlarge | r5.16xlarge | r5.24xlarge | r5.metal | r5a.large | r5a.xlarge | r5a.2xlarge | r5a.4xlarge | r5a.8xlarge | r5a.12xlarge | r5a.16xlarge | r5a.24xlarge | r5ad.large | r5ad.xlarge | r5ad.2xlarge | r5ad.4xlarge | r5ad.8xlarge | r5ad.12xlarge | r5ad.16xlarge | r5ad.24xlarge | r5b.large | r5b.xlarge | r5b.2xlarge | r5b.4xlarge | r5b.8xlarge | r5b.12xlarge | r5b.16xlarge | r5b.24xlarge | r5b.metal | r5d.large | r5d.xlarge | r5d.2xlarge | r5d.4xlarge | r5d.8xlarge | r5d.12xlarge | r5d.16xlarge | r5d.24xlarge | r5d.metal | r5dn.large | r5dn.xlarge | r5dn.2xlarge | r5dn.4xlarge | r5dn.8xlarge | r5dn.12xlarge | r5dn.16xlarge | r5dn.24xlarge | r5dn.metal | r5n.large | r5n.xlarge | r5n.2xlarge | r5n.4xlarge | r5n.8xlarge | r5n.12xlarge | r5n.16xlarge | r5n.24xlarge | r5n.metal | r6g.medium | r6g.large | r6g.xlarge | r6g.2xlarge | r6g.4xlarge | r6g.8xlarge | r6g.12xlarge | r6g.16xlarge | r6g.metal | r6gd.medium | r6gd.large | r6gd.xlarge | r6gd.2xlarge | r6gd.4xlarge | r6gd.8xlarge | r6gd.12xlarge | r6gd.16xlarge | r6gd.metal | t1.micro | t2.nano | t2.micro | t2.small | t2.medium | t2.large | t2.xlarge | t2.2xlarge | t3.nano | t3.micro | t3.small | t3.medium | t3.large | t3.xlarge | t3.2xlarge | t3a.nano | t3a.micro | t3a.small | t3a.medium | t3a.large | t3a.xlarge | t3a.2xlarge | t4g.nano | t4g.micro | t4g.small | t4g.medium | t4g.large | t4g.xlarge | t4g.2xlarge | u-6tb1.56xlarge | u-6tb1.112xlarge | u-9tb1.112xlarge | u-12tb1.112xlarge | u-6tb1.metal | u-9tb1.metal | u-12tb1.metal | u-18tb1.metal | u-24tb1.metal | vt1.3xlarge | vt1.6xlarge | vt1.24xlarge | x1.16xlarge | x1.32xlarge | x1e.xlarge | x1e.2xlarge | x1e.4xlarge | x1e.8xlarge | x1e.16xlarge | x1e.32xlarge | x2gd.medium | x2gd.large | x2gd.xlarge | x2gd.2xlarge | x2gd.4xlarge | x2gd.8xlarge | x2gd.12xlarge | x2gd.16xlarge | x2gd.metal | z1d.large | z1d.xlarge | z1d.2xlarge | z1d.3xlarge | z1d.6xlarge | z1d.12xlarge | z1d.metal,
    KernelId: 'STRING_VALUE',
    KeyName: 'STRING_VALUE',
    LicenseSpecifications: [
      {
        LicenseConfigurationArn: 'STRING_VALUE'
      },
      /* more items */
    ],
    MetadataOptions: {
      HttpEndpoint: disabled | enabled,
      HttpProtocolIpv6: disabled | enabled,
      HttpPutResponseHopLimit: 'NUMBER_VALUE',
      HttpTokens: optional | required,
      InstanceMetadataTags: disabled | enabled
    },
    Monitoring: {
      Enabled: true || false
    },
    NetworkInterfaces: [
      {
        AssociateCarrierIpAddress: true || false,
        AssociatePublicIpAddress: true || false,
        DeleteOnTermination: true || false,
        Description: 'STRING_VALUE',
        DeviceIndex: 'NUMBER_VALUE',
        Groups: [
          'STRING_VALUE',
          /* more items */
        ],
        InterfaceType: 'STRING_VALUE',
        Ipv4PrefixCount: 'NUMBER_VALUE',
        Ipv4Prefixes: [
          {
            Ipv4Prefix: 'STRING_VALUE'
          },
          /* more items */
        ],
        Ipv6AddressCount: 'NUMBER_VALUE',
        Ipv6Addresses: [
          {
            Ipv6Address: 'STRING_VALUE'
          },
          /* more items */
        ],
        Ipv6PrefixCount: 'NUMBER_VALUE',
        Ipv6Prefixes: [
          {
            Ipv6Prefix: 'STRING_VALUE'
          },
          /* more items */
        ],
        NetworkCardIndex: 'NUMBER_VALUE',
        NetworkInterfaceId: 'STRING_VALUE',
        PrivateIpAddress: 'STRING_VALUE',
        PrivateIpAddresses: [
          {
            Primary: true || false,
            PrivateIpAddress: 'STRING_VALUE'
          },
          /* more items */
        ],
        SecondaryPrivateIpAddressCount: 'NUMBER_VALUE',
        SubnetId: 'STRING_VALUE'
      },
      /* more items */
    ],
    Placement: {
      Affinity: 'STRING_VALUE',
      AvailabilityZone: 'STRING_VALUE',
      GroupName: 'STRING_VALUE',
      HostId: 'STRING_VALUE',
      HostResourceGroupArn: 'STRING_VALUE',
      PartitionNumber: 'NUMBER_VALUE',
      SpreadDomain: 'STRING_VALUE',
      Tenancy: default | dedicated | host
    },
    PrivateDnsNameOptions: {
      EnableResourceNameDnsAAAARecord: true || false,
      EnableResourceNameDnsARecord: true || false,
      HostnameType: ip-name | resource-name
    },
    RamDiskId: 'STRING_VALUE',
    SecurityGroupIds: [
      'STRING_VALUE',
      /* more items */
    ],
    SecurityGroups: [
      'STRING_VALUE',
      /* more items */
    ],
    TagSpecifications: [
      {
        ResourceType: capacity-reservation | client-vpn-endpoint | customer-gateway | carrier-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-ip | elastic-gpu | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | instance-event-window | internet-gateway | ipam | ipam-pool | ipam-scope | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | local-gateway | local-gateway-route-table | local-gateway-virtual-interface | local-gateway-virtual-interface-group | local-gateway-route-table-vpc-association | local-gateway-route-table-virtual-interface-group-association | natgateway | network-acl | network-interface | network-insights-analysis | network-insights-path | network-insights-access-scope | network-insights-access-scope-analysis | placement-group | prefix-list | replace-root-volume-task | reserved-instances | route-table | security-group | security-group-rule | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-connect-peer | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-endpoint | vpc-endpoint-service | vpc-peering-connection | vpn-connection | vpn-gateway | vpc-flow-log,
        Tags: [
          {
            Key: 'STRING_VALUE',
            Value: 'STRING_VALUE'
          },
          /* more items */
        ]
      },
      /* more items */
    ],
    UserData: 'STRING_VALUE'
  },
  LaunchTemplateName: 'STRING_VALUE', /* required */
  ClientToken: 'STRING_VALUE',
  DryRun: true || false,
  TagSpecifications: [
    {
      ResourceType: capacity-reservation | client-vpn-endpoint | customer-gateway | carrier-gateway | dedicated-host | dhcp-options | egress-only-internet-gateway | elastic-ip | elastic-gpu | export-image-task | export-instance-task | fleet | fpga-image | host-reservation | image | import-image-task | import-snapshot-task | instance | instance-event-window | internet-gateway | ipam | ipam-pool | ipam-scope | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | local-gateway | local-gateway-route-table | local-gateway-virtual-interface | local-gateway-virtual-interface-group | local-gateway-route-table-vpc-association | local-gateway-route-table-virtual-interface-group-association | natgateway | network-acl | network-interface | network-insights-analysis | network-insights-path | network-insights-access-scope | network-insights-access-scope-analysis | placement-group | prefix-list | replace-root-volume-task | reserved-instances | route-table | security-group | security-group-rule | snapshot | spot-fleet-request | spot-instances-request | subnet | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-connect-peer | transit-gateway-multicast-domain | transit-gateway-route-table | volume | vpc | vpc-endpoint | vpc-endpoint-service | vpc-peering-connection | vpn-connection | vpn-gateway | vpc-flow-log,
      Tags: [
        {
          Key: 'STRING_VALUE',
          Value: 'STRING_VALUE'
        },
        /* more items */
      ]
    },
    /* more items */
  ],
  VersionDescription: 'STRING_VALUE'
};
ec2.createLaunchTemplate(params, function(err, data) {
  if (err) console.log(err, err.stack); // an error occurred
  else     console.log(data);           // successful response
});